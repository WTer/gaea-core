// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gaeanetwork/gaea-core/protos/service/task.proto

package service

import (
	context "context"
	fmt "fmt"
	tee "github.com/gaeanetwork/gaea-core/protos/tee"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRequest struct {
	DataId               []string `protobuf:"bytes,1,rep,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	AlgorithmId          string   `protobuf:"bytes,2,opt,name=algorithm_id,json=algorithmId,proto3" json:"algorithm_id,omitempty"`
	ResultAddress        string   `protobuf:"bytes,3,opt,name=result_address,json=resultAddress,proto3" json:"result_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2378bf9291708812, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetDataId() []string {
	if m != nil {
		return m.DataId
	}
	return nil
}

func (m *CreateRequest) GetAlgorithmId() string {
	if m != nil {
		return m.AlgorithmId
	}
	return ""
}

func (m *CreateRequest) GetResultAddress() string {
	if m != nil {
		return m.ResultAddress
	}
	return ""
}

type CreateResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2378bf9291708812, []int{1}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type QueryTaskByIDRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTaskByIDRequest) Reset()         { *m = QueryTaskByIDRequest{} }
func (m *QueryTaskByIDRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByIDRequest) ProtoMessage()    {}
func (*QueryTaskByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2378bf9291708812, []int{2}
}

func (m *QueryTaskByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByIDRequest.Unmarshal(m, b)
}
func (m *QueryTaskByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByIDRequest.Marshal(b, m, deterministic)
}
func (m *QueryTaskByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByIDRequest.Merge(m, src)
}
func (m *QueryTaskByIDRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByIDRequest.Size(m)
}
func (m *QueryTaskByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByIDRequest proto.InternalMessageInfo

func (m *QueryTaskByIDRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type QueryTaskByIDResponse struct {
	Task                 *tee.Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueryTaskByIDResponse) Reset()         { *m = QueryTaskByIDResponse{} }
func (m *QueryTaskByIDResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTaskByIDResponse) ProtoMessage()    {}
func (*QueryTaskByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2378bf9291708812, []int{3}
}

func (m *QueryTaskByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTaskByIDResponse.Unmarshal(m, b)
}
func (m *QueryTaskByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTaskByIDResponse.Marshal(b, m, deterministic)
}
func (m *QueryTaskByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTaskByIDResponse.Merge(m, src)
}
func (m *QueryTaskByIDResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTaskByIDResponse.Size(m)
}
func (m *QueryTaskByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTaskByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTaskByIDResponse proto.InternalMessageInfo

func (m *QueryTaskByIDResponse) GetTask() *tee.Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "service.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "service.CreateResponse")
	proto.RegisterType((*QueryTaskByIDRequest)(nil), "service.QueryTaskByIDRequest")
	proto.RegisterType((*QueryTaskByIDResponse)(nil), "service.QueryTaskByIDResponse")
}

func init() {
	proto.RegisterFile("github.com/gaeanetwork/gaea-core/protos/service/task.proto", fileDescriptor_2378bf9291708812)
}

var fileDescriptor_2378bf9291708812 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x4b, 0x02, 0x41,
	0x14, 0xc6, 0x31, 0x65, 0xc5, 0x67, 0x7a, 0x18, 0x2a, 0x65, 0xc1, 0xb0, 0x85, 0xc0, 0x0e, 0xcd,
	0x90, 0x81, 0x50, 0xb7, 0xac, 0xcb, 0x5e, 0x82, 0x96, 0x4e, 0x5d, 0x64, 0xdc, 0x79, 0xac, 0xcb,
	0xaa, 0x63, 0x33, 0xb3, 0x85, 0x7f, 0x46, 0xff, 0x71, 0xcc, 0xec, 0x26, 0x5a, 0x06, 0x75, 0xdb,
	0xef, 0xf7, 0xbe, 0xf7, 0xbe, 0xb7, 0x8f, 0x81, 0xdb, 0x24, 0x35, 0xb3, 0x7c, 0x4a, 0x63, 0xb9,
	0x60, 0x09, 0x47, 0xbe, 0x44, 0xf3, 0x2e, 0x55, 0xe6, 0xbe, 0x2f, 0x63, 0xa9, 0x90, 0xad, 0x94,
	0x34, 0x52, 0x33, 0x8d, 0xea, 0x2d, 0x8d, 0x91, 0x19, 0xae, 0x33, 0xea, 0x18, 0xa9, 0x97, 0xcc,
	0x1f, 0xfd, 0x75, 0x88, 0xc1, 0xed, 0x01, 0x81, 0x82, 0xd6, 0xbd, 0x42, 0x6e, 0x30, 0xc2, 0xd7,
	0x1c, 0xb5, 0x21, 0x1d, 0xa8, 0x0b, 0x6e, 0xf8, 0x24, 0x15, 0xdd, 0x4a, 0xbf, 0x3a, 0x68, 0x44,
	0x9e, 0x95, 0xa1, 0x20, 0x67, 0x70, 0xc8, 0xe7, 0x89, 0x54, 0xa9, 0x99, 0x2d, 0x6c, 0xf5, 0xa0,
	0x5f, 0x19, 0x34, 0xa2, 0xe6, 0x86, 0x85, 0x82, 0x9c, 0x43, 0x5b, 0xa1, 0xce, 0xe7, 0x66, 0xc2,
	0x85, 0x50, 0xa8, 0x75, 0xb7, 0xea, 0x4c, 0xad, 0x82, 0xde, 0x15, 0x30, 0xb8, 0x80, 0xf6, 0x57,
	0xa6, 0x5e, 0xc9, 0xa5, 0x46, 0x1b, 0x6a, 0x77, 0x2a, 0x42, 0x6d, 0x87, 0x67, 0x65, 0x28, 0x02,
	0x06, 0x47, 0x4f, 0x39, 0xaa, 0xf5, 0x33, 0xd7, 0xd9, 0x78, 0x1d, 0x3e, 0x6c, 0x6d, 0xb9, 0xbf,
	0x61, 0x04, 0xc7, 0xdf, 0x1a, 0xca, 0x88, 0x1e, 0xd4, 0xac, 0xc5, 0xd9, 0x9b, 0xc3, 0x06, 0x35,
	0x88, 0xd4, 0x9a, 0x22, 0x87, 0x87, 0x1f, 0x15, 0xa8, 0x59, 0x49, 0x6e, 0xc0, 0x2b, 0x96, 0x23,
	0x27, 0xb4, 0x3c, 0x2e, 0xdd, 0xb9, 0x90, 0xdf, 0xf9, 0xc1, 0xcb, 0x88, 0x47, 0x68, 0xed, 0x64,
	0x93, 0xde, 0xc6, 0xb9, 0xef, 0x27, 0xfc, 0xd3, 0xdf, 0xca, 0xc5, 0xbc, 0xf1, 0xd5, 0x0b, 0xfb,
	0xe7, 0xd3, 0x98, 0x7a, 0x4e, 0x5f, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x73, 0xef, 0x4a,
	0x54, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	QueryTaskByID(ctx context.Context, in *QueryTaskByIDRequest, opts ...grpc.CallOption) (*QueryTaskByIDResponse, error)
}

type taskClient struct {
	cc *grpc.ClientConn
}

func NewTaskClient(cc *grpc.ClientConn) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/service.Task/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) QueryTaskByID(ctx context.Context, in *QueryTaskByIDRequest, opts ...grpc.CallOption) (*QueryTaskByIDResponse, error) {
	out := new(QueryTaskByIDResponse)
	err := c.cc.Invoke(ctx, "/service.Task/QueryTaskByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	QueryTaskByID(context.Context, *QueryTaskByIDRequest) (*QueryTaskByIDResponse, error)
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTaskServer) QueryTaskByID(ctx context.Context, req *QueryTaskByIDRequest) (*QueryTaskByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskByID not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Task/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_QueryTaskByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTaskByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).QueryTaskByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Task/QueryTaskByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).QueryTaskByID(ctx, req.(*QueryTaskByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Task_Create_Handler,
		},
		{
			MethodName: "QueryTaskByID",
			Handler:    _Task_QueryTaskByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gaeanetwork/gaea-core/protos/service/task.proto",
}
