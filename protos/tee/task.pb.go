// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package tee

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Task struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataId               []string          `protobuf:"bytes,2,rep,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	AlgorithmId          string            `protobuf:"bytes,3,opt,name=algorithm_id,json=algorithmId,proto3" json:"algorithm_id,omitempty"`
	ContainerType        int32             `protobuf:"varint,4,opt,name=container_type,json=containerType,proto3" json:"container_type,omitempty"`
	ResultAddress        string            `protobuf:"bytes,5,opt,name=result_address,json=resultAddress,proto3" json:"result_address,omitempty"`
	DataNotifactions     map[string]string `protobuf:"bytes,6,rep,name=data_notifactions,json=dataNotifactions,proto3" json:"data_notifactions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateSeconds        int64             `protobuf:"varint,7,opt,name=create_seconds,json=createSeconds,proto3" json:"create_seconds,omitempty"`
	UpdateSeconds        int64             `protobuf:"varint,8,opt,name=update_seconds,json=updateSeconds,proto3" json:"update_seconds,omitempty"`
	Evidence             *EvidenceHash     `protobuf:"bytes,9,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Partners             map[string]bool   `protobuf:"bytes,10,rep,name=partners,proto3" json:"partners,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Executor             string            `protobuf:"bytes,11,opt,name=executor,proto3" json:"executor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetDataId() []string {
	if m != nil {
		return m.DataId
	}
	return nil
}

func (m *Task) GetAlgorithmId() string {
	if m != nil {
		return m.AlgorithmId
	}
	return ""
}

func (m *Task) GetContainerType() int32 {
	if m != nil {
		return m.ContainerType
	}
	return 0
}

func (m *Task) GetResultAddress() string {
	if m != nil {
		return m.ResultAddress
	}
	return ""
}

func (m *Task) GetDataNotifactions() map[string]string {
	if m != nil {
		return m.DataNotifactions
	}
	return nil
}

func (m *Task) GetCreateSeconds() int64 {
	if m != nil {
		return m.CreateSeconds
	}
	return 0
}

func (m *Task) GetUpdateSeconds() int64 {
	if m != nil {
		return m.UpdateSeconds
	}
	return 0
}

func (m *Task) GetEvidence() *EvidenceHash {
	if m != nil {
		return m.Evidence
	}
	return nil
}

func (m *Task) GetPartners() map[string]bool {
	if m != nil {
		return m.Partners
	}
	return nil
}

func (m *Task) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

type EvidenceHash struct {
	Data                 []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Algorithm            string   `protobuf:"bytes,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Result               string   `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	ExecutionLog         string   `protobuf:"bytes,4,opt,name=execution_log,json=executionLog,proto3" json:"execution_log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvidenceHash) Reset()         { *m = EvidenceHash{} }
func (m *EvidenceHash) String() string { return proto.CompactTextString(m) }
func (*EvidenceHash) ProtoMessage()    {}
func (*EvidenceHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *EvidenceHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvidenceHash.Unmarshal(m, b)
}
func (m *EvidenceHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvidenceHash.Marshal(b, m, deterministic)
}
func (m *EvidenceHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvidenceHash.Merge(m, src)
}
func (m *EvidenceHash) XXX_Size() int {
	return xxx_messageInfo_EvidenceHash.Size(m)
}
func (m *EvidenceHash) XXX_DiscardUnknown() {
	xxx_messageInfo_EvidenceHash.DiscardUnknown(m)
}

var xxx_messageInfo_EvidenceHash proto.InternalMessageInfo

func (m *EvidenceHash) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EvidenceHash) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *EvidenceHash) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *EvidenceHash) GetExecutionLog() string {
	if m != nil {
		return m.ExecutionLog
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "tee.Task")
	proto.RegisterMapType((map[string]string)(nil), "tee.Task.DataNotifactionsEntry")
	proto.RegisterMapType((map[string]bool)(nil), "tee.Task.PartnersEntry")
	proto.RegisterType((*EvidenceHash)(nil), "tee.EvidenceHash")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xa4, 0xed, 0x92, 0xd7, 0x66, 0xda, 0x2c, 0x60, 0x56, 0x85, 0x44, 0x18, 0x42,
	0xca, 0x85, 0x1e, 0xb6, 0x0b, 0x82, 0x13, 0x82, 0x49, 0x4c, 0x9a, 0x10, 0x0a, 0xbb, 0x47, 0x26,
	0x7e, 0x74, 0x56, 0x8b, 0x1d, 0xd9, 0xaf, 0x13, 0x3d, 0xf0, 0xaf, 0xf1, 0xb7, 0xa1, 0xd8, 0x21,
	0x0d, 0x08, 0x69, 0x37, 0xbf, 0x9f, 0xbf, 0x67, 0xbf, 0xcf, 0xfe, 0x00, 0x48, 0xb8, 0xcd, 0xaa,
	0xb5, 0x86, 0x0c, 0x4b, 0x08, 0xf1, 0xfc, 0xd7, 0x04, 0x26, 0xb7, 0xc2, 0x6d, 0xd8, 0x31, 0xc4,
	0x4a, 0xf2, 0xa8, 0x88, 0xca, 0xac, 0x8a, 0x95, 0x64, 0x67, 0x70, 0x24, 0x05, 0x89, 0x5a, 0x49,
	0x1e, 0x17, 0x49, 0x99, 0x55, 0xb3, 0xae, 0xbc, 0x96, 0xec, 0x39, 0x2c, 0xc4, 0x76, 0x6d, 0xac,
	0xa2, 0xbb, 0xef, 0xdd, 0x6e, 0xe2, 0x5b, 0xe6, 0x03, 0xbb, 0x96, 0xec, 0x25, 0x1c, 0x37, 0x46,
	0x93, 0x50, 0x1a, 0x6d, 0x4d, 0xfb, 0x16, 0xf9, 0xa4, 0x88, 0xca, 0x69, 0x95, 0x0f, 0xf4, 0x76,
	0xdf, 0x62, 0x27, 0xb3, 0xe8, 0x76, 0x5b, 0xaa, 0x85, 0x94, 0x16, 0x9d, 0xe3, 0x53, 0x7f, 0x56,
	0x1e, 0xe8, 0xbb, 0x00, 0xd9, 0x0d, 0x9c, 0xfa, 0x49, 0xb4, 0x21, 0xf5, 0x4d, 0x34, 0xa4, 0x8c,
	0x76, 0x7c, 0x56, 0x24, 0xe5, 0xfc, 0xe2, 0xd9, 0x8a, 0x10, 0x57, 0xdd, 0xfc, 0xab, 0x0f, 0x82,
	0xc4, 0xa7, 0x91, 0xe2, 0x4a, 0x93, 0xdd, 0x57, 0x27, 0xf2, 0x1f, 0xec, 0x67, 0xb3, 0x28, 0x08,
	0x6b, 0x87, 0x8d, 0xd1, 0xd2, 0xf1, 0xa3, 0x22, 0x2a, 0x93, 0x2a, 0x0f, 0xf4, 0x4b, 0x80, 0x9d,
	0x6c, 0xd7, 0xca, 0xb1, 0x2c, 0x0d, 0xb2, 0x40, 0xff, 0xc8, 0x5e, 0x41, 0x8a, 0xf7, 0x4a, 0xa2,
	0x6e, 0x90, 0x67, 0x45, 0x54, 0xce, 0x2f, 0x4e, 0xfd, 0x48, 0x57, 0x3d, 0xfc, 0x28, 0xdc, 0x5d,
	0x35, 0x48, 0xd8, 0x25, 0xa4, 0xad, 0xb0, 0xa4, 0xd1, 0x3a, 0x0e, 0xde, 0xc1, 0xd9, 0xc1, 0xc1,
	0xe7, 0x7e, 0x27, 0x4c, 0x3e, 0x08, 0xd9, 0x12, 0x52, 0xfc, 0x81, 0xcd, 0x8e, 0x8c, 0xe5, 0x73,
	0xff, 0x40, 0x43, 0xbd, 0x7c, 0x0f, 0x8f, 0xff, 0x6b, 0x9c, 0x9d, 0x40, 0xb2, 0xc1, 0x7d, 0xff,
	0x9f, 0xdd, 0x92, 0x3d, 0x82, 0xe9, 0xbd, 0xd8, 0xee, 0x90, 0xc7, 0x9e, 0x85, 0xe2, 0x4d, 0xfc,
	0x3a, 0x5a, 0xbe, 0x85, 0xfc, 0xaf, 0xbb, 0x1f, 0x6a, 0x4e, 0x47, 0xcd, 0xe7, 0x3f, 0x61, 0x31,
	0x36, 0xcb, 0x18, 0x4c, 0xba, 0x37, 0xe7, 0x91, 0x0f, 0x8d, 0x5f, 0xb3, 0xa7, 0x90, 0x0d, 0xf1,
	0xe8, 0xaf, 0x3f, 0x00, 0xf6, 0x04, 0x66, 0xe1, 0xc3, 0xfb, 0x28, 0xf5, 0x15, 0x7b, 0x01, 0x79,
	0xf0, 0xa9, 0x8c, 0xae, 0xb7, 0x66, 0xed, 0x43, 0x94, 0x55, 0x8b, 0x01, 0xde, 0x98, 0xf5, 0xd7,
	0x99, 0xcf, 0xf2, 0xe5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xcf, 0x47, 0x2e, 0xd9, 0x02,
	0x00, 0x00,
}
